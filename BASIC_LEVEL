-- Create Sales table
--------------------------These are the BASIC LEVEL----------------------------------
CREATE TABLE Sales (
    sale_id INT PRIMARY KEY,
    product_id INT,
    quantity_sold INT,
    sale_date DATE,
    total_price DECIMAL(10, 2)
);

-- Insert sample data into Sales table

INSERT INTO Sales (sale_id, product_id, quantity_sold, sale_date, total_price) VALUES
(1, 101, 5, TO_DATE('2024-01-01', 'YYYY-MM-DD'), 2500.00),
(2, 102, 3, TO_DATE('2024-01-02', 'YYYY-MM-DD'), 900.00),
(3, 103, 2, TO_DATE('2024-01-02', 'YYYY-MM-DD'), 60.00),
(4, 104, 4, TO_DATE('2024-01-03', 'YYYY-MM-DD'), 80.00),
(5, 105, 6, TO_DATE('2024-01-03', 'YYYY-MM-DD'), 90.00);
CREATE TABLE Products (
    product_id INT PRIMARY KEY,
    product_name VARCHAR(100),
    category VARCHAR(50),
    unit_price DECIMAL(10, 2)
);

-- Insert sample data into Products table

INSERT INTO Products (product_id, product_name, category, unit_price) VALUES
(101, 'Laptop', 'Electronics', 500.00),
(102, 'Smartphone', 'Electronics', 300.00),
(103, 'Headphones', 'Electronics', 30.00),
(104, 'Keyboard', 'Electronics', 20.00),
(105, 'Mouse', 'Electronics', 15.00);

--1.query to retrieve all the columns from the sales table
select *
from Sales;
--2. Retrieve the product_name and unit_price from the Products table.
select product_name,unit_price
from Products;
--3. Retrieve the sale_id and sale_date from the Sales table.
select sale_id,sale_date
from Sales;
--4. Filter the Sales table to show only sales with a total_price greater than $100.
select *
from Sales
where total_price > 100;
--5. Filter the Products table to show only products in the 'Electronics' category.
select *
from PRODUCTS
where category = 'Electronics';
--6. Retrieve the sale_id and total_price from the Sales table for sales made on January 3, 2024.
SELECT sale_id, total_price 
FROM Sales 
WHERE sale_date = TO_DATE('2024-01-03', 'YYYY-MM-DD');
--7. Retrieve the product_id and product_name from the Products table for products with a unit_price greater than $100.
select product_id,product_name
from PRODUCTS
where UNIT_PRICE > 100;
--8. Calculate the total revenue generated from all sales in the Sales table.
select sum(total_price) as total_revenue
from Sales;
--9. Calculate the average unit_price of products in the Products table.
select avg(unit_price) as Average
from products;
--10. Calculate the total quantity_sold from the Sales table.
select sum(quantity_sold) as total_quantity_sold
from sales;
--11. Count Sales Per Day from the Sales table

select sale_date,count(*) as sales_count
from Sales
group by sale_date;
--12. Retrieve product_name and unit_price from the Products table with the Highest Unit Price
SELECT product_name, unit_price 
FROM Products 
ORDER BY unit_price DESC 
FETCH FIRST 1 ROW only;
--13. Retrieve the sale_id, product_id, and total_price from the Sales table for sales with a quantity_sold greater than 4.
select sale_id,product_id,total_price
from Sales
where QUANTITY_SOLD > 4;
--14. Retrieve the product_name and unit_price from the Products table, ordering the results by unit_price in descending order.
select product_name,unit_price
from PRODUCTS
order by UNIT_PRICE desc;
--15. Retrieve the total_price of all sales, rounding the values to two decimal places.
select round(sum(total_price),2) as final
from Sales;
--16. Calculate the average total_price of sales in the Sales table.
select avg(total_price) as average_total_price
from Sales;
--17. Retrieve the sale_id and sale_date from the Sales table, formatting the sale_date as 'YYYY-MM-DD'.
select sale_id,to_char(sale_date,'YYYY-MM-DD') as formatted_date
from Sales;
--18. Calculate the total revenue generated from sales of products in the 'Electronics' category.
select sum(s.TOTAL_PRICE) as total_revenue
from
Sales s
left join
Products p
on s.product_id=p.product_id
where p.CATEGORY='Electronics';
--19. Retrieve the product_name and unit_price from the Products table, filtering the unit_price to show only values between $20 and $600.
SELECT product_name,unit_price
from products
where unit_price between 20 and 600;
--20.Retrieve the product_name and category from the Products table, ordering the results by category in ascending order.
select product_name,category
from Products
order by category;
---------------------These are the BASIC LEVEL---------------------------------------------------------------




